[agent]
  collection_jitter = "0s"
  debug = false
  flush_buffer_when_full = true
  flush_interval = "500ms"
  flush_jitter = 0
  hostname = "$HOSTNAME"
  interval = "500ms"
  logfile = ""
  metric_batch_size = 10000
  metric_buffer_limit = 60000
  omit_hostname = true
  precision = ""
  quiet = false
  round_interval = false

[[processors.rename]]
  order = 1
  [[processors.rename.replace]]
    dest = "trackingId"
    tag = "deviceAddress"

[[processors.kontaktauth]]
  # note: "/" at the end is required
  api_address = "http://apps-api.accept-0:8080/"
  order = 2

[[outputs.kafka]]
  brokers = [ 'b-1.kafka-mirror.ivlbtq.c11.kafka.us-east-1.amazonaws.com:9092','b-2.kafka-mirror.ivlbtq.c11.kafka.us-east-1.amazonaws.com:9092','b-3.kafka-mirror.ivlbtq.c11.kafka.us-east-1.amazonaws.com:9092','b-4.kafka-mirror.ivlbtq.c11.kafka.us-east-1.amazonaws.com:9092','b-5.kafka-mirror.ivlbtq.c11.kafka.us-east-1.amazonaws.com:9092','b-6.kafka-mirror.ivlbtq.c11.kafka.us-east-1.amazonaws.com:9092','b-7.kafka-mirror.ivlbtq.c11.kafka.us-east-1.amazonaws.com:9092','b-8.kafka-mirror.ivlbtq.c11.kafka.us-east-1.amazonaws.com:9092','b-9.kafka-mirror.ivlbtq.c11.kafka.us-east-1.amazonaws.com:9092' ]
  data_format = "flat_json"
  routing_tag = "trackingId"
  routing_key = "unknown" # Fallback
  topic = "raw-advertisements"
  version = "2.0.0"
  exclude_timestamp = true
  ## Compression codec represents the various compression codecs recognized by
  ## Kafka in messages.
  ##  0 : None
  ##  1 : Gzip
  ##  2 : Snappy
  ##  3 : LZ4
  ##  4 : ZSTD
  compression_codec = 1

  ##  RequiredAcks is used in Produce Requests to tell the broker how many
  ##  replica acknowledgements it must see before responding
  ##   0 : the producer never waits for an acknowledgement from the broker.
  ##       This option provides the lowest latency but the weakest durability
  ##       guarantees (some data will be lost when a server fails).
  ##   1 : the producer gets an acknowledgement after the leader replica has
  ##       received the data. This option provides better durability as the
  ##       client waits until the server acknowledges the request as successful
  ##       (only messages that were written to the now-dead leader but not yet
  ##       replicated will be lost).
  ##   -1: the producer gets an acknowledgement after all in-sync replicas have
  ##       received the data. This option provides the best durability, we
  ##       guarantee that no messages will be lost as long as at least one in
  ##       sync replica remains.
  required_acks = 1

[[inputs.http_listener_v2]]
  data_format = "kontakt"
  header_tags = [ "Api-Key" ]
  methods = [ "POST" ]
  path = "/event/collect"
  service_address = ":8080"


