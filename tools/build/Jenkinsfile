#!groovy

node {

    currentBuild.result = "SUCCESS"

    try {

        stage('Checkout') {
            checkout scm
        }

        stage('Build Telegraf') {
            docker.image('golang:1.11').inside('-u root') {
                sh 'go get -u github.com/golang/dep/cmd/dep'
                print $WORKSPACE
                sh 'pwd'
                sh 'ls -la'
                sh 'make'
            }
        }

        if (env.BRANCH_NAME == 'master') {
            stage('[Prod] Push telegraf image') {
                def deploy = docker.build('kontaktio/telegraf', '-f tools/build/Dockerfile --build-arg SCRIPTS_SOURCE=prod .')
                docker.withRegistry('https://712852996757.dkr.ecr.us-east-1.amazonaws.com', 'ecr:eu-west-1:jenkins-aws') {
                    deploy.push('latest')
                }
            }

        } else {
            stage('[Test] Push telegraf image') {
                def deploy = docker.build('kontaktio/telegraf', '-f tools/build/Dockerfile --build-arg SCRIPTS_SOURCE=test .')
                docker.withRegistry('https://712852996757.dkr.ecr.eu-west-1.amazonaws.com', 'ecr:eu-west-1:jenkins-aws') {
                    deploy.push('latest')
                }
            }
        }
    }
    catch (err) {
        currentBuild.result = "ERROR"
        throw err
    }
}
